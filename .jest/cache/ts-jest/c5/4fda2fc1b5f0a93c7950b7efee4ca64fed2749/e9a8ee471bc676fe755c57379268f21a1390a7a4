[["/Users/markoarthofer/Documents/Projects/test-project/jest.setup.ts",{"fileContent":"import '@testing-library/jest-dom/extend-expect';\n","resolvedModuleNames":[]}],["/Users/markoarthofer/Documents/Projects/test-project/src/components/button/__tests__/button.test.tsx",{"fileContent":"import React from 'react';\nimport renderer from 'react-test-renderer';\nimport { render, screen } from '@testing-library/react';\nimport user from '@testing-library/user-event';\nimport Button from '../index';\n\ndescribe('Button component tests', () => {\n  it('First render with all props passed', () => {\n    const component = renderer.create(<Button title=\"Button title\" />).toJSON();\n    expect(component).toMatchSnapshot();\n  });\n\n  it('should render a button with the tile \"Button title\"', () => {\n    render(<Button title=\"Button title\" />);\n    const button = screen.getByText(/title/i);\n\n    expect(button).toHaveTextContent('Button title');\n  });\n\n  it('should be disabled if disabled prop is passed', () => {\n    render(<Button disabled title=\"Button title\" />);\n    const button = screen.getByText(/title/i);\n\n    expect(button).toBeDisabled();\n  });\n\n  it('should be disabled when clicked', async () => {\n    let disabled = false;\n    const setDisabled = jest.fn(() => (disabled = !disabled));\n\n    const { rerender } = render(\n      <Button\n        disabled={disabled}\n        title=\"Button title\"\n        onClick={() => {\n          setDisabled();\n        }}\n      />\n    );\n    const button = screen.getByText(/title/i);\n\n    console.log('disabledBefore', disabled);\n\n    expect(button).not.toBeDisabled();\n\n    await user.click(button);\n\n    rerender(\n      <Button\n        disabled={disabled}\n        title=\"Button title\"\n        onClick={() => {\n          setDisabled();\n        }}\n      />\n    );\n\n    console.log('disabledAfter', disabled);\n\n    expect(button).toBeDisabled();\n  });\n});\n","resolvedModuleNames":["/Users/markoarthofer/Documents/Projects/test-project/src/components/button/index.tsx"]}],["/Users/markoarthofer/Documents/Projects/test-project/src/components/button/index.tsx",{"fileContent":"import React from 'react';\nimport './index.scss';\n\ninterface IButtonProps {\n  children?: React.ReactNode;\n  type?: 'button' | 'submit' | 'reset' | undefined;\n  className?: string;\n  onClick?: (e?: React.SyntheticEvent) => void;\n  title?: string;\n  isLoading?: boolean;\n  disabled?: boolean;\n}\nconst Button = ({ type = 'button', children, className, onClick, title, isLoading = false, disabled = false }: IButtonProps) => (\n  <button\n    className={`${className || ''} ${isLoading ? 'button--loading' : ''}`}\n    type={type}\n    title={title}\n    onClick={onClick}\n    disabled={isLoading ? true : false || disabled}>\n    {children} {title}\n  </button>\n);\nexport default Button;\n","resolvedModuleNames":[]}]]